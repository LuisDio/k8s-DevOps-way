############## Service for the webapp##############
apiVersion: v1
kind: Service
metadata:
  name: fleetman-webapp
spec:
  # This define which pods are going to be represented by this Service
  # The service become a network endpoint for either other Service
  # or mayabe external uses to connect to( eg browser)
  selector:
    app: webapp # (select any pod that match any pods found in cluster with same key value pair
  ports:
    - name: http
      port: 80 # Expose outside to this port

  type: LoadBalancer # Automatically provisione LoadBalancer

---
############# Service for ActiveMQ (queue)############
apiVersion: v1
kind: Service
metadata:
  name: fleetman-queue
spec:
  # This define which pods are going to be represented by this Service
  # The service become a network endpoint for either other Service
  # or mayabe external uses to connect to( eg browser)
  selector:
    app: queue # Match any pods found in cluster with same key value pair

  ports:
    - name: http
      port: 8161
      # Expose outside to this port

    - name: endpoint # for the message and no need for nodePort cause will not be exposed to outside
      port: 61616

  type: ClusterIP # Accessible outside


---
############## Service for position tracker############
apiVersion: v1
kind: Service
metadata:
  name: fleetman-position-tracker

spec:
  # This define which pods are going to be represented by this Service
  # The service become a network endpoint for either other Service
  # or mayabe external uses to connect to( eg browser)
  selector:
    app: position-tracker # Match any pods found in cluster with same key value pair

  ports:
    - name: http
      port: 8080

  type: ClusterIP # Accessible only within Cluster


---
############# Service for api gateway##############
apiVersion: v1
kind: Service
metadata:
  name: fleetman-api-gateway

spec:
  # This define which pods are going to be represented by this Service
  # The service become a network endpoint for either other Service
  # or mayabe external uses to connect to( eg browser)
  selector:
    app: api-gateway # Match any pods found in cluster with same key value pair

  ports:
    - name: http
      port: 8080

  type: ClusterIP # Accessible only within Cluster
